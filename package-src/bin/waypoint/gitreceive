#!/bin/bash -l

# slightly modified version of:
# https://github.com/progrium/gitreceive
# 9d4e686bc554f4b91cae225c2522e9cf7d015fbd
# http://git.io/Awx0lg

GITUSER="git"
GITHOME="/var/local/git"
SELF="/usr/local/bin/gitreceive"

case "$1" in
# Public commands

  init) # gitreceive init
    useradd -d $GITHOME $GITUSER || true
    #mkdir -p $GITHOME/.ssh
    #touch $GITHOME/.ssh/authorized_keys
    cat > $GITHOME/receiver <<EOF
#!/bin/bash
exec /usr/local/bin/slug-receiver \$@
EOF
    chmod +x $GITHOME/receiver
    chown -R $GITUSER $GITHOME
    echo "Created receiver script in $GITHOME for user '$GITUSER'."
    ;;

# Internal commands
  run) 
    export RECEIVE_USER=$2
    export RECEIVE_FINGERPRINT=$3
    # ssh provides the original requested command in $SSH_ORIGINAL_COMMAND
    export RECEIVE_REPO="$(echo $SSH_ORIGINAL_COMMAND | awk '{print $2}' | perl -pe 's/(?<!\\)'\''//g' | sed 's/\\'\''/'\''/g')"
    REPO_PATH="$GITHOME/$RECEIVE_REPO"
    if [ ! -d $REPO_PATH ]; then
      mkdir -p $REPO_PATH
      cd $REPO_PATH
      git init --bare > /dev/null
    fi
    cd $GITHOME
    PRERECEIVE_HOOK="$REPO_PATH/hooks/pre-receive"
    cat > $PRERECEIVE_HOOK <<EOF
#!/bin/bash
cat | $SELF hook
EOF
    chmod +x $PRERECEIVE_HOOK
    git-shell -c "$SSH_ORIGINAL_COMMAND"
    ;;

  hook)
    while read oldrev newrev refname
    do
      # Only run this script for the master branch. You can remove this 
      # if block if you wish to run it for others as well.
      if [[ $refname = "refs/heads/master" ]] ; then
 
        git archive $newrev | $GITHOME/receiver "$RECEIVE_REPO" "$newrev" "$RECEIVE_USER" "$RECEIVE_FINGERPRINT"  
 
        rc=$?
        if [[ $rc != 0 ]] ; then
          echo "      ERROR: failed on rev $newrev - push denied"
          exit $rc
        fi
      fi
    done
    #exit 1 # for debugging
    ;;

  *)
    echo "Usage: gitreceive <command> [options]"
    ;;
esac