#!/bin/bash
set -eo pipefail

function ensure_defined() {
  if [[ -z "$1" ]] ; then
    exit 0
  else
    echo "\$$1 isn't defined in the environment, aborting"
    exit 1
  fi
}

# Ensure the environment is defined
ensure_defined "SLUG_SERVER"
ensure_defined "APP_NAME"

app="$APP_NAME"
app_dir="/srv/app/src"

procfile="$app_dir/Procfile"

slug_server_url="http://$SLUG_SERVER"

slug_file="$app_dir/slug.tgz"
slug_url="$slug_server_url/$app-latest.tgz"

checksum_file="$app_dir/slug.sha512"
checksum_url="$slug_server_url/$app-latest.sha512"

function output_redirect() {
  cat -
}

function echo_title() {
  echo $'\e[1G----->' $* | output_redirect
}

function echo_normal() {
  echo $'\e[1G      ' $* | output_redirect
}

function ensure_indent() {
  while read line; do
    if [[ "$line" == --* ]]; then
      echo $'\e[1G'$line | output_redirect
    else
      echo $'\e[1G      ' "$line" | output_redirect
    fi
  done
}

function get_checksum() {
  curl $checksum_url
}

function sync_slug() {
  # download
  echo_title "Downloading slug from $SLUG_SERVER"
  wget -O $slug_file $slug_url

  echo "Verifying slug with checksum"
  get_checksum > $checksum_file
  expected_checksum=cat $checksum_file
  slug_checksum==/usr/bin/shasum -a 512 $slug_file | awk -F '\ ' '{print $1}' -
  if [[ "$expected_checksum" -eq "$slug_checksum" ]]; then
    echo_normal "Slug verification complete"
  else
    echo_normal "Server's checksum doesn't match the downloaded slug. Aborting"
    exit 1
  fi
  
  echo_title "Expanding slug to $app_dir" 
  tar -xzC $app_dir $slug_file
}

# TODO handle slug server unavailability

echo_title "Checking for previous slug"
if [[ -e "$slug_file" ]] ; then
  echo_title "Matching existing slug with server's latest version"
  local_checksum=cat $checksum_file
  remote_checksum=get_checksum
  if [[ "$local_checksuum" -eq "$remote_checksum" ]]; then
    echo_normal "Checksums match, using existing slug"
  else
    echo_normal "Checksums differ, cleaning existing slug"
    rm -fr $app_dir $slug_file $checksum_file
    sync_slug
  fi
else
  echo_title "No slug found, pulling from the server"
  sync_slug
fi

types=$(ruby -e "require 'yaml';puts YAML.load_file('$procfile').keys().join(', ')")
echo_normal "Procfile declares types -> $types"
echo_title "Starting Procfile with Forego"

# TODO run forego