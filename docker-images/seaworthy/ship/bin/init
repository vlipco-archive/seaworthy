#!/bin/bash
set -eo pipefail

function abort() {
  echo "FATAL: $1" && exit 1
}

function ensure_defined() {
  if [[ -z "${!1}" ]] ; then
    abort "$1 isn't defined in the environment"
  fi
}

function get_checksum() {
  curl -s $checksum_url
}

function sync_slug() {
  echo "Downloading $app-latest from $slug_server_url"
  wget -qO $slug_file $slug_url || (rm $slug_file && echo 'wget failed' && exit 1) 

  echo $(get_checksum) > $checksum_file
  expected_checksum=$(cat $checksum_file)
  slug_checksum=$(/usr/bin/sha512sum $slug_file | /usr/bin/awk -F ' ' '{print $1}' -)

  if [[ "$expected_checksum" == "$slug_checksum" ]]; then
    echo "Checksum verification passed"
  else
    abort "Server's checksum doesn't match the downloaded slug"
  fi
  
  echo "Extracting slug"
  mkdir -p $app_dir
  tar -xzf $slug_file -C $app_dir
  sleep 1
}

# Ensure the environment is defined
ensure_defined "SLUG_SERVER"
ensure_defined "APP_NAME"

app=`echo $APP_NAME | sed 's/"//g'`

app_dir="/app"

procfile="$app_dir/Procfile"

slug_server_url=`echo "http://$SLUG_SERVER" | sed 's/"//g'`

slug_file="$cache/slug.tgz"
slug_url="$slug_server_url/$app-latest.tgz"

checksum_file="$cache/slug.sha512"
checksum_url="$slug_server_url/$app-latest.sha512"

# TODO handle slug server unavailability

sync_slug

types=$(ruby -e "require 'yaml';puts YAML.load_file('$procfile').keys().join(', ')")
echo "Procfile declares types -> $types"

cd $app_dir

echo "Sourcing the app's env"
for file in profile.d/*; do
  echo "Sourcing $file"
  source $file
done

sleep 1
echo "Starting Procfile with Shoreman"
PORT=5000 shoreman
