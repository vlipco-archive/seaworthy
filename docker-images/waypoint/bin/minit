#!/bin/bash
set -eo pipefail

# Based in Shoreman

info() {
  echo "[info] $1"
}

store_pid() {
  pids=("${pids[@]}" "$1")
}

log() {
  cat - | sed -e "s/^/\[info\] /g"
}

start_command() {
  name=$2
  cmd=$1
  mkfifo $name 
  $cmd > $name &
  pid="$!"
  store_pid "$pid"
  info "$2 started with pid=$pid"
  log < $name &
}

info "Minit started with pid=$$"

while read line || [ -n "$line" ]; do
  name=${line%%:*}
  command=${line#*: }
  start_command "$command" $name
done < "/srv/conf/Procfile"

send_signal() {
  #for pid in $(jobs -p); do
  for pid in "${pids[@]}"; do
    echo "Signaling $pid with $1"
    kill -s $1 $pid &> /dev/null
  done
}

onexit() {
  echo "!! $1 Terminating all processes"
  send_signal SIGTERM
  sleep 3
  send_signal SIGKILL
  sleep 1
  info "-- Bye"
  exit 0
}

trap 'onexit "SIGINT received."' SIGINT
trap 'onexit "SIGTERM received."' SIGTERM

while true; do
  #for line in $(jobs -p); do
  for pid in "${pids[@]}"; do
    echo "Checking $pid"
    kill -0 $pid &> /dev/null || onexit "UNEXPECTED FAILURE in pid=$pid."
  done
  sleep 0.5
done
